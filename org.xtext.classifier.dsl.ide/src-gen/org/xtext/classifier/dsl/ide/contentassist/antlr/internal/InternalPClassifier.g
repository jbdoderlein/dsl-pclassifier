/*
 * generated by Xtext 2.26.0
 */
grammar InternalPClassifier;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.classifier.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.classifier.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.classifier.dsl.services.PClassifierGrammarAccess;

}
@parser::members {
	private PClassifierGrammarAccess grammarAccess;

	public void setGrammarAccess(PClassifierGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePClassfier
entryRulePClassfier
:
{ before(grammarAccess.getPClassfierRule()); }
	 rulePClassfier
{ after(grammarAccess.getPClassfierRule()); } 
	 EOF 
;

// Rule PClassfier
rulePClassfier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPClassfierAccess().getElementsAssignment()); }
		(rule__PClassfier__ElementsAssignment)*
		{ after(grammarAccess.getPClassfierAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassifier
entryRuleClassifier
:
{ before(grammarAccess.getClassifierRule()); }
	 ruleClassifier
{ after(grammarAccess.getClassifierRule()); } 
	 EOF 
;

// Rule Classifier
ruleClassifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassifierAccess().getGroup()); }
		(rule__Classifier__Group__0)
		{ after(grammarAccess.getClassifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrain
entryRuleTrain
:
{ before(grammarAccess.getTrainRule()); }
	 ruleTrain
{ after(grammarAccess.getTrainRule()); } 
	 EOF 
;

// Rule Train
ruleTrain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrainAccess().getGroup()); }
		(rule__Train__Group__0)
		{ after(grammarAccess.getTrainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEval
entryRuleEval
:
{ before(grammarAccess.getEvalRule()); }
	 ruleEval
{ after(grammarAccess.getEvalRule()); } 
	 EOF 
;

// Rule Eval
ruleEval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvalAccess().getGroup()); }
		(rule__Eval__Group__0)
		{ after(grammarAccess.getEvalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSave
entryRuleSave
:
{ before(grammarAccess.getSaveRule()); }
	 ruleSave
{ after(grammarAccess.getSaveRule()); } 
	 EOF 
;

// Rule Save
ruleSave 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSaveAccess().getGroup()); }
		(rule__Save__Group__0)
		{ after(grammarAccess.getSaveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureList
entryRuleFeatureList
:
{ before(grammarAccess.getFeatureListRule()); }
	 ruleFeatureList
{ after(grammarAccess.getFeatureListRule()); } 
	 EOF 
;

// Rule FeatureList
ruleFeatureList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureListAccess().getGroup()); }
		(rule__FeatureList__Group__0)
		{ after(grammarAccess.getFeatureListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvaluationList
entryRuleEvaluationList
:
{ before(grammarAccess.getEvaluationListRule()); }
	 ruleEvaluationList
{ after(grammarAccess.getEvaluationListRule()); } 
	 EOF 
;

// Rule EvaluationList
ruleEvaluationList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvaluationListAccess().getGroup()); }
		(rule__EvaluationList__Group__0)
		{ after(grammarAccess.getEvaluationListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MLModel
ruleMLModel
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMLModelAccess().getAlternatives()); }
		(rule__MLModel__Alternatives)
		{ after(grammarAccess.getMLModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Evaluation
ruleEvaluation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getAlternatives()); }
		(rule__Evaluation__Alternatives)
		{ after(grammarAccess.getEvaluationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getClassifierParserRuleCall_0()); }
		ruleClassifier
		{ after(grammarAccess.getStatementAccess().getClassifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTrainParserRuleCall_1()); }
		ruleTrain
		{ after(grammarAccess.getStatementAccess().getTrainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEvalParserRuleCall_2()); }
		ruleEval
		{ after(grammarAccess.getStatementAccess().getEvalParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLoadParserRuleCall_3()); }
		ruleLoad
		{ after(grammarAccess.getStatementAccess().getLoadParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSaveParserRuleCall_4()); }
		ruleSave
		{ after(grammarAccess.getStatementAccess().getSaveParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MLModel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMLModelAccess().getDecisonTreeEnumLiteralDeclaration_0()); }
		('DecisionTree')
		{ after(grammarAccess.getMLModelAccess().getDecisonTreeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMLModelAccess().getSVMEnumLiteralDeclaration_1()); }
		('SVM')
		{ after(grammarAccess.getMLModelAccess().getSVMEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Evaluation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationAccess().getAccuracyEnumLiteralDeclaration_0()); }
		('accuracy')
		{ after(grammarAccess.getEvaluationAccess().getAccuracyEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationAccess().getF1ScoreEnumLiteralDeclaration_1()); }
		('f1')
		{ after(grammarAccess.getEvaluationAccess().getF1ScoreEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationAccess().getRecallEnumLiteralDeclaration_2()); }
		('recall')
		{ after(grammarAccess.getEvaluationAccess().getRecallEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEvaluationAccess().getConfusionMatrixEnumLiteralDeclaration_3()); }
		('cfm')
		{ after(grammarAccess.getEvaluationAccess().getConfusionMatrixEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__0__Impl
	rule__Classifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getClassifierKeyword_0()); }
	'Classifier('
	{ after(grammarAccess.getClassifierAccess().getClassifierKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__1__Impl
	rule__Classifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getNameAssignment_1()); }
	(rule__Classifier__NameAssignment_1)
	{ after(grammarAccess.getClassifierAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__2__Impl
	rule__Classifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
	'){'
	{ after(grammarAccess.getClassifierAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__3__Impl
	rule__Classifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getFeaturesKeyword_3()); }
	'features'
	{ after(grammarAccess.getClassifierAccess().getFeaturesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__4__Impl
	rule__Classifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getClassifierAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__5__Impl
	rule__Classifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getFeaturesAssignment_5()); }
	(rule__Classifier__FeaturesAssignment_5)
	{ after(grammarAccess.getClassifierAccess().getFeaturesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__6__Impl
	rule__Classifier__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getTargetKeyword_6()); }
	'target'
	{ after(grammarAccess.getClassifierAccess().getTargetKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__7__Impl
	rule__Classifier__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getClassifierAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__8__Impl
	rule__Classifier__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getTargetAssignment_8()); }
	(rule__Classifier__TargetAssignment_8)
	{ after(grammarAccess.getClassifierAccess().getTargetAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__9__Impl
	rule__Classifier__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getModelKeyword_9()); }
	'model'
	{ after(grammarAccess.getClassifierAccess().getModelKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__10__Impl
	rule__Classifier__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getColonKeyword_10()); }
	':'
	{ after(grammarAccess.getClassifierAccess().getColonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__11__Impl
	rule__Classifier__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getModelAssignment_11()); }
	(rule__Classifier__ModelAssignment_11)
	{ after(grammarAccess.getClassifierAccess().getModelAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Classifier__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassifierAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getClassifierAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Train__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__0__Impl
	rule__Train__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getTrainKeyword_0()); }
	'Train('
	{ after(grammarAccess.getTrainAccess().getTrainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__1__Impl
	rule__Train__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getNameAssignment_1()); }
	(rule__Train__NameAssignment_1)
	{ after(grammarAccess.getTrainAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__2__Impl
	rule__Train__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
	'){'
	{ after(grammarAccess.getTrainAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__3__Impl
	rule__Train__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getDatasetKeyword_3()); }
	'dataset'
	{ after(grammarAccess.getTrainAccess().getDatasetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__4__Impl
	rule__Train__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getTrainAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__5__Impl
	rule__Train__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getDatasetAssignment_5()); }
	(rule__Train__DatasetAssignment_5)
	{ after(grammarAccess.getTrainAccess().getDatasetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__6__Impl
	rule__Train__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getSplitKeyword_6()); }
	'split'
	{ after(grammarAccess.getTrainAccess().getSplitKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__7__Impl
	rule__Train__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getTrainAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__8__Impl
	rule__Train__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getSplitAssignment_8()); }
	(rule__Train__SplitAssignment_8)
	{ after(grammarAccess.getTrainAccess().getSplitAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Train__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrainAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getTrainAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__0__Impl
	rule__Eval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvalKeyword_0()); }
	'Eval('
	{ after(grammarAccess.getEvalAccess().getEvalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__1__Impl
	rule__Eval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getNameAssignment_1()); }
	(rule__Eval__NameAssignment_1)
	{ after(grammarAccess.getEvalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__2__Impl
	rule__Eval__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
	'){'
	{ after(grammarAccess.getEvalAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__3__Impl
	rule__Eval__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvaluationsKeyword_3()); }
	'evaluations'
	{ after(grammarAccess.getEvalAccess().getEvaluationsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__4__Impl
	rule__Eval__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getEvalAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__5__Impl
	rule__Eval__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getEvaluationsAssignment_5()); }
	(rule__Eval__EvaluationsAssignment_5)
	{ after(grammarAccess.getEvalAccess().getEvaluationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eval__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvalAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getEvalAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
	'Load('
	{ after(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getNameAssignment_1()); }
	(rule__Load__NameAssignment_1)
	{ after(grammarAccess.getLoadAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
	'){'
	{ after(grammarAccess.getLoadAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
	rule__Load__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getFileKeyword_3()); }
	'file'
	{ after(grammarAccess.getLoadAccess().getFileKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__4__Impl
	rule__Load__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getLoadAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__5__Impl
	rule__Load__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getFileAssignment_5()); }
	(rule__Load__FileAssignment_5)
	{ after(grammarAccess.getLoadAccess().getFileAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Save__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__0__Impl
	rule__Save__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
	'Save('
	{ after(grammarAccess.getSaveAccess().getSaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__1__Impl
	rule__Save__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getNameAssignment_1()); }
	(rule__Save__NameAssignment_1)
	{ after(grammarAccess.getSaveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__2__Impl
	rule__Save__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
	'){'
	{ after(grammarAccess.getSaveAccess().getRightParenthesisLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__3__Impl
	rule__Save__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getFileKeyword_3()); }
	'file'
	{ after(grammarAccess.getSaveAccess().getFileKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__4__Impl
	rule__Save__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getSaveAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__5__Impl
	rule__Save__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getFileAssignment_5()); }
	(rule__Save__FileAssignment_5)
	{ after(grammarAccess.getSaveAccess().getFileAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Save__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSaveAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSaveAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group__0__Impl
	rule__FeatureList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureListAccess().getCommaKeyword_0()); }
	(',')*
	{ after(grammarAccess.getFeatureListAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group__1__Impl
	rule__FeatureList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureListAccess().getValsAssignment_1()); }
	(rule__FeatureList__ValsAssignment_1)
	{ after(grammarAccess.getFeatureListAccess().getValsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group__2__Impl
	rule__FeatureList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureListAccess().getGroup_2()); }
	(rule__FeatureList__Group_2__0)*
	{ after(grammarAccess.getFeatureListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureListAccess().getCommaKeyword_3()); }
	(',')*
	{ after(grammarAccess.getFeatureListAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group_2__0__Impl
	rule__FeatureList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFeatureListAccess().getCommaKeyword_2_0()); }
		(',')
		{ after(grammarAccess.getFeatureListAccess().getCommaKeyword_2_0()); }
	)
	(
		{ before(grammarAccess.getFeatureListAccess().getCommaKeyword_2_0()); }
		(',')*
		{ after(grammarAccess.getFeatureListAccess().getCommaKeyword_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureListAccess().getValsAssignment_2_1()); }
	(rule__FeatureList__ValsAssignment_2_1)
	{ after(grammarAccess.getFeatureListAccess().getValsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluationList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group__0__Impl
	rule__EvaluationList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationListAccess().getCommaKeyword_0()); }
	(',')*
	{ after(grammarAccess.getEvaluationListAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group__1__Impl
	rule__EvaluationList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationListAccess().getValsAssignment_1()); }
	(rule__EvaluationList__ValsAssignment_1)
	{ after(grammarAccess.getEvaluationListAccess().getValsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group__2__Impl
	rule__EvaluationList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationListAccess().getGroup_2()); }
	(rule__EvaluationList__Group_2__0)*
	{ after(grammarAccess.getEvaluationListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationListAccess().getCommaKeyword_3()); }
	(',')*
	{ after(grammarAccess.getEvaluationListAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluationList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group_2__0__Impl
	rule__EvaluationList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEvaluationListAccess().getCommaKeyword_2_0()); }
		(',')
		{ after(grammarAccess.getEvaluationListAccess().getCommaKeyword_2_0()); }
	)
	(
		{ before(grammarAccess.getEvaluationListAccess().getCommaKeyword_2_0()); }
		(',')*
		{ after(grammarAccess.getEvaluationListAccess().getCommaKeyword_2_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EvaluationList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEvaluationListAccess().getValsAssignment_2_1()); }
	(rule__EvaluationList__ValsAssignment_2_1)
	{ after(grammarAccess.getEvaluationListAccess().getValsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PClassfier__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPClassfierAccess().getElementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getPClassfierAccess().getElementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassifierAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__FeaturesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getFeaturesFeatureListParserRuleCall_5_0()); }
		ruleFeatureList
		{ after(grammarAccess.getClassifierAccess().getFeaturesFeatureListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__TargetAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getTargetSTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getClassifierAccess().getTargetSTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Classifier__ModelAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassifierAccess().getModelMLModelEnumRuleCall_11_0()); }
		ruleMLModel
		{ after(grammarAccess.getClassifierAccess().getModelMLModelEnumRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrainAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTrainAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__DatasetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrainAccess().getDatasetSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getTrainAccess().getDatasetSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Train__SplitAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTrainAccess().getSplitFLOATTerminalRuleCall_8_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getTrainAccess().getSplitFLOATTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEvalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eval__EvaluationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvalAccess().getEvaluationsEvaluationListParserRuleCall_5_0()); }
		ruleEvaluationList
		{ after(grammarAccess.getEvalAccess().getEvaluationsEvaluationListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLoadAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__FileAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getFileSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoadAccess().getFileSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSaveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Save__FileAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSaveAccess().getFileSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getSaveAccess().getFileSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__ValsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureListAccess().getValsSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFeatureListAccess().getValsSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureList__ValsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureListAccess().getValsSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFeatureListAccess().getValsSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__ValsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationListAccess().getValsEvaluationEnumRuleCall_1_0()); }
		ruleEvaluation
		{ after(grammarAccess.getEvaluationListAccess().getValsEvaluationEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EvaluationList__ValsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluationListAccess().getValsEvaluationEnumRuleCall_2_1_0()); }
		ruleEvaluation
		{ after(grammarAccess.getEvaluationListAccess().getValsEvaluationEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_FLOAT : (('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
